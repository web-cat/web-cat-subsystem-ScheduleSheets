{
    attributes = (
        {
            columnName = activity;
            name = activity;
            prototypeName = tinyInteger;
            userInfo = {
                isScalar = true;
                scalarConversionMethodName = byteValue;
                scalarDefault = 0;
                type = byte;
                valueClassName = Byte;
            };
        },
        {
            columnName = componentFeatureId;
            name = componentFeatureId;
            prototypeName = foreignId;
        },
        {name = id; prototypeName = id; },
        {
            columnName = isComplete;
            allowsNull = N;
            name = isComplete;
            prototypeName = boolean;
            userInfo = {isScalar = true; scalarDefault = false; type = boolean; };
        },
        {
            columnName = newDeadline;
            name = newDeadline;
            allowsNull = Y;
            externalType = DATE;
            valueClassName = NSCalendarDate;
        },
        {
            columnName = newEstimatedRemaining;
            name = newEstimatedRemaining;
            prototypeName = double;
            userInfo = {
                isScalar = true;
                scalarConversionMethodName = doubleValue;
                scalarDefault = "0.0";
                type = double;
                valueClassName = Double;
            };
        },
        {
            columnName = newTimeInvested;
            name = newTimeInvested;
            prototypeName = double;
            userInfo = {
                isScalar = true;
                scalarConversionMethodName = doubleValue;
                scalarDefault = "0.0";
                type = double;
                valueClassName = Double;
            };
        },
        {
            columnName = previousDeadline;
            name = previousDeadline;
            allowsNull = Y;
            externalType = DATE;
            valueClassName = NSCalendarDate;
        },
        {
            columnName = previousEstimatedRemaining;
            name = previousEstimatedRemaining;
            prototypeName = double;
            userInfo = {
                isScalar = true;
                scalarConversionMethodName = doubleValue;
                scalarDefault = "0.0";
                type = double;
                valueClassName = Double;
            };
        },
        {
            columnName = previousEstimatedTotal;
            name = previousEstimatedTotal;
            prototypeName = double;
            userInfo = {
                isScalar = true;
                scalarConversionMethodName = doubleValue;
                scalarDefault = "0.0";
                type = double;
                valueClassName = Double;
            };
        },
        {
            columnName = previousTimeInvestedTotal;
            name = previousTimeInvestedTotal;
            prototypeName = double;
            userInfo = {
                isScalar = true;
                scalarConversionMethodName = doubleValue;
                scalarDefault = "0.0";
                type = double;
                valueClassName = Double;
            };
        },
        {
            columnName = previousWasComplete;
            allowsNull = N;
            name = previousWasComplete;
            prototypeName = boolean;
            userInfo = {isScalar = true; scalarDefault = false; type = boolean; };
        },
    );
    attributesUsedForLocking = (
        activity,
        componentFeatureId,
        isComplete,
        newEstimatedRemaining,
        newTimeInvested,
        previousEstimatedTotal,
        previousEstimatedRemaining,
        previousTimeInvestedTotal,
        previousWasComplete
    );
    className = "org.webcat.schedulesheets.SheetEntry";
    classProperties = (
        activity,
        componentFeature,
        feedbackItems,
        finished,
        isComplete,
        newDeadline,
        newEstimatedRemaining,
        newTimeInvested,
        previousDeadline,
        previousEstimatedTotal,
        previousEstimatedRemaining,
        previousTimeInvestedTotal,
        previousWasComplete,
        responsible,
        workers
    );
    externalName = SheetEntry;
    fetchSpecificationDictionary = {};
    name = SheetEntry;
    primaryKeyAttributes = (id);
    relationships = (
        {
            destination = ComponentFeature;
            isToMany = N;
            joinSemantic = EOInnerJoin;
            joins = ({destinationAttribute = id; sourceAttribute = componentFeatureId; });
            name = componentFeature;
        },
        {
            destination = SheetFeedbackItem;
            isToMany = Y;
            joinSemantic = EOInnerJoin;
            joins = ({destinationAttribute = sheetEntryId; sourceAttribute = id; });
            name = feedbackItems;
        },
        {
            deleteRule = EODeleteRuleCascade;
            destination = EntryStudentPreviouslyWorked;
            isToMany = Y;
            joinSemantic = EOInnerJoin;
            joins = ({destinationAttribute = id; sourceAttribute = id; });
            name = entryStudents1;
            propagatesPrimaryKey = Y;
        },
        {definition = "entryStudents1.user"; name = workers; },
        {
            deleteRule = EODeleteRuleCascade;
            destination = EntryStudentNewResponsible;
            isToMany = Y;
            joinSemantic = EOInnerJoin;
            joins = ({destinationAttribute = id; sourceAttribute = id; });
            name = entryStudents2;
            propagatesPrimaryKey = Y;
        },
        {definition = "entryStudents2.user"; name = responsible; }
    );
}
